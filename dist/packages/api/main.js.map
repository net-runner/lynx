{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA,6CAA0B;AAE1B,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;AAc5C,mBACE,YAAyB,EACzB,GAAoC;;QAEpC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,OAAO,eAAK;aACT,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YACvD,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAChD,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;CAAA;AAVD,+BAUC;;;;;;;;;;;AC1BD,2CAAoC;AACpC,6CAA0B;AAC1B,6DAAuC;AACvC,yGAAkE;AAElE,MAAM,YAAY,GAAG,IAAI,sBAAM,EAAE,CAAC;AAClC,MAAM,EAAE,iBAAiB,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;AAEvE,qCAAqC;AACrC,MAAM,SAAS,GAAG,EAAE,CAAC;AAErB,mCAAmC;AACnC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACvC,IAAI,CAAC,aAAa,EAAE;QAClB,GAAG,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;KACzC;IACD,MAAM,KAAK,GAAG,aAAM,GAAE,CAAC;IACvB,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IAChE,GAAG,CAAC,QAAQ,CACV,sDAAsD,aAAa,UAAU,KAAK,EAAE,CACrF,CAAC;AACJ,CAAC,EAAC,CAAC;AAEH,gCAAgC;AAChC,uCAAuC;AACvC,YAAY,CAAC,GAAG,CAAC,WAAW,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC/C,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;IAEzC,6BAA6B;IAC7B,IAAI,KAAK,EAAE;QACT,iBAAiB;QACjB,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;KAC5B;IAED,wDAAwD;IACxD,IAAI,CAAC,SAAS,CAAC,KAAe,CAAC,EAAE;QAC/B,GAAG,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;KACxD;IACD,sBAAsB;IACtB,OAAO,SAAS,CAAC,KAAe,CAAC,CAAC;IAElC,MAAM,IAAI,GAAG;QACX,SAAS,EAAE,aAAa;QACxB,aAAa,EAAE,iBAAiB;QAChC,IAAI;KACL,CAAC;IACF,MAAM,IAAI,GAAG,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,kBAAkB,EAAE,EAAE,CAAC;IAEzD,MAAM,eAAK;SACR,IAAI,CAAC,6CAA6C,EAAE,IAAI,EAAE,IAAI,CAAC;SAC/D,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;SACzB,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;QAChB,mHAAmH;QACnH,MAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC;QACxC,eAAK;aACF,GAAG,CAAC,6BAA6B,EAAE;YAClC,OAAO,EAAE,EAAE,aAAa,EAAE,SAAS,UAAU,EAAE,EAAE;SAClD,CAAC;aACD,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;aACzB,IAAI,CAAC,CAAO,aAAa,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,MAAM,QAAQ,GAAG;gBACf,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,oBAAoB,aAAa,CAAC,KAAK,EAAE;wBAChD,WAAW,EAAE,6BAA6B;qBAC3C;iBACF;aACF,CAAC;YACF,MAAM,gCAAkB,EAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CACtB,CAAC;YACF,2DAA2D;QAC7D,CAAC,EAAC,CAAC;IACP,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAE9D,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC7B,CAAC,EAAC,CAAC;AAEH,4BAA4B;AAC5B,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;IAC9B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IACxB,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,2BAA2B;QAC3B,sBAAsB;QACtB,0HAA0H;QAE1H,MAAM,QAAQ,GAAG;YACf,MAAM,EAAE;gBACN;oBACE,KAAK,EAAE,sBAAsB,IAAI,CAAC,KAAK,EAAE;oBACzC,WAAW,EAAE,4BAA4B;iBAC1C;aACF;SACF,CAAC;QAEF,MAAM,gCAAkB,EAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;KAC3E;SAAM;QACL,GAAG,CAAC,GAAG,EAAE,CAAC;KACX;AACH,CAAC,EAAC,CAAC;AAEH,qBAAe,YAAY,CAAC;;;;;;;;;;;ACtG5B,6DAAuC;AAGvC,MAAM,YAAY,GAAG,IAAI,sBAAM,EAAE,CAAC;AAElC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IACvC,GAAG,CAAC,QAAQ,CAAC,0CAA0C,CAAC,CAAC;AAC3D,CAAC,EAAC,CAAC;AACH,qBAAe,YAAY,CAAC;;;;;;;;;;;ACV5B,6DAAuC;AACvC,qFAAoC;AACpC,qFAAoC;AAEpC,MAAM,UAAU,GAAG,IAAI,sBAAM,EAAE,CAAC;AAEhC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrB,CAAC,EAAC,CAAC;AAEH,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpB,CAAC,EAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,gBAAY,CAAC,CAAC;AAC/C,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,gBAAY,CAAC,CAAC;AAE/C,qBAAe,UAAU,CAAC;;;;;;;;;;;ACjB1B,kFAAgC;AAQ9B,qBARK,cAAU,CAQL;AAPZ,kFAAgC;AAQ9B,qBARK,cAAU,CAQL;AAPZ,4FAA0C;AAQxC,0BARK,mBAAe,CAQL;AAPjB,gFAA8B;AAQ5B,oBARK,aAAS,CAQL;AAPX,kFAAgC;AAQ9B,qBARK,cAAU,CAQL;AAPZ,4FAA0C;AAQxC,0BARK,mBAAe,CAQL;;;;;;;;;;ACbjB,6DAAuC;AAEvC,MAAM,UAAU,GAAG,IAAI,sBAAM,EAAE,CAAC;AAEhC,qBAAe,UAAU,CAAC;;;;;;;;;;ACJ1B,6DAAuC;AAEvC,MAAM,eAAe,GAAG,IAAI,sBAAM,EAAE,CAAC;AAErC,qBAAe,eAAe,CAAC;;;;;;;;;;ACJ/B,6DAAuC;AAEvC,MAAM,SAAS,GAAG,IAAI,sBAAM,EAAE,CAAC;AAE/B,qBAAe,SAAS,CAAC;;;;;;;;;;ACJzB,6DAAuC;AAEvC,MAAM,UAAU,GAAG,IAAI,sBAAM,EAAE,CAAC;AAEhC,qBAAe,UAAU,CAAC;;;;;;;;;;ACJ1B,6DAAuC;AAEvC,MAAM,eAAe,GAAG,IAAI,sBAAM,EAAE,CAAC;AAErC,qBAAe,eAAe,CAAC;;;;;;;;ACJ/B;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,6DAAuC;AACvC,8BAAgB;AAChB,+EAOsB;AACtB,MAAM,GAAG,GAAG,IAAI,sBAAM,EAAE,CAAC;AAEzB,0CAA0C;AAC1C,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;IACtC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;AAEpC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAU,CAAC,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,mBAAU,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,wBAAe,CAAC,CAAC;AACxC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAU,CAAC,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAe,CAAC,CAAC;AACvC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAS,CAAC,CAAC;AAE3B,GAAG;KACA,MAAM,CAAC,IAAc,CAAC;KACtB,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,CAAC;KAC3D,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CACf,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,GAAG,SAAS,GAAG,KAAK,CAAC,CACxE,CAAC;AAEJ,iCAAiC;AACjC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC","sources":["webpack://linx/./packages/api/src/app/helpers/pushDiscordWebhook.ts","webpack://linx/./packages/api/src/app/routes/auth/github.ts","webpack://linx/./packages/api/src/app/routes/auth/google.ts","webpack://linx/./packages/api/src/app/routes/auth/index.ts","webpack://linx/./packages/api/src/app/routes/index.ts","webpack://linx/./packages/api/src/app/routes/link/index.ts","webpack://linx/./packages/api/src/app/routes/linkgroup/index.ts","webpack://linx/./packages/api/src/app/routes/tag/index.ts","webpack://linx/./packages/api/src/app/routes/user/index.ts","webpack://linx/./packages/api/src/app/routes/usergroup/index.ts","webpack://linx/external commonjs \"axios\"","webpack://linx/external commonjs \"dotenv\"","webpack://linx/external commonjs \"hyper-express\"","webpack://linx/external commonjs \"tslib\"","webpack://linx/external commonjs \"uuid\"","webpack://linx/webpack/bootstrap","webpack://linx/./packages/api/src/main.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { DefaultResponseLocals, Response } from 'hyper-express';\r\nconst { DISCORD_WEBHOOK_URL } = process.env;\r\n\r\n//See https://discord.com/developers/docs/resources/channel#embed-object\r\ninterface WebhookBody {\r\n  embeds: {\r\n    title?: string;\r\n    type?: string;\r\n    description?: string;\r\n    url?: string;\r\n    timestamp?: string;\r\n    color?: string;\r\n  }[];\r\n}\r\n\r\nexport default async function (\r\n  webhook_body: WebhookBody,\r\n  res: Response<DefaultResponseLocals>\r\n) {\r\n  console.log('[WEBHOOK] New push on discord');\r\n  return axios\r\n    .post(DISCORD_WEBHOOK_URL, JSON.stringify(webhook_body), {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n    .catch((err) => res.status(500).json({ err: err.message }));\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport { Router } from 'hyper-express';\r\nimport pushDiscordWebhook from '../../helpers/pushDiscordWebhook';\r\n\r\nconst githubRouter = new Router();\r\nconst { GITHUB_APP_SECRET, GITHUB_APP_ID, FRONTEND_URL } = process.env;\r\n\r\n//Dictionary for request state checks\r\nconst stateDict = {};\r\n\r\n//Route for Oauth login with github\r\ngithubRouter.get('/', async (req, res) => {\r\n  if (!GITHUB_APP_ID) {\r\n    res.send('GitHub app id not specified');\r\n  }\r\n  const state = uuidv4();\r\n  stateDict[state] = new Date().getMilliseconds() + 5 * 60 * 1000;\r\n  res.redirect(\r\n    `https://github.com/login/oauth/authorize?client_id=${GITHUB_APP_ID}&state=${state}`\r\n  );\r\n});\r\n\r\n//Route for Oauth login callback\r\n//handle cancelation + token requesting\r\ngithubRouter.get('/callback', async (req, res) => {\r\n  const { error, code, state } = req.query;\r\n\r\n  //If github user cancels auth\r\n  if (error) {\r\n    //redirect to app\r\n    res.redirect(FRONTEND_URL);\r\n  }\r\n\r\n  //Check state parameter in case of cross-forgery attempt\r\n  if (!stateDict[state as string]) {\r\n    res.send('State diff, possible cross-forgery attempt');\r\n  }\r\n  //Delete unused memory\r\n  delete stateDict[state as string];\r\n\r\n  const body = {\r\n    client_id: GITHUB_APP_ID,\r\n    client_secret: GITHUB_APP_SECRET,\r\n    code,\r\n  };\r\n  const opts = { headers: { accept: 'application/json' } };\r\n\r\n  await axios\r\n    .post('https://github.com/login/oauth/access_token', body, opts)\r\n    .then((_res) => _res.data)\r\n    .then((git_res) => {\r\n      //https://docs.github.com/en/developers/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps\r\n      const oauthToken = git_res.access_token;\r\n      axios\r\n        .get('https://api.github.com/user', {\r\n          headers: { Authorization: `token ${oauthToken}` },\r\n        })\r\n        .then((_res) => _res.data)\r\n        .then(async (git_user_data) => {\r\n          console.log(git_user_data);\r\n          const webhBody = {\r\n            embeds: [\r\n              {\r\n                title: `Github new user: ${git_user_data.login}`,\r\n                description: `user authorization accepted`,\r\n              },\r\n            ],\r\n          };\r\n          await pushDiscordWebhook(webhBody, res).then(() =>\r\n            res.status(200).end()\r\n          );\r\n          //TODO add user to database, forward token data to frontend\r\n        });\r\n    })\r\n    .catch((err) => res.status(500).json({ err: err.message }));\r\n\r\n  res.redirect(FRONTEND_URL);\r\n});\r\n\r\n//Handle Github hook events.\r\ngithubRouter.post('/hook', async (req, res) => {\r\n  const body = await req.json();\r\n  const { action } = body;\r\n  if (action === 'revoked') {\r\n    //TODO implement app revoke\r\n    //TODO Drop user data?\r\n    //https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#github_app_authorization=\r\n\r\n    const webhBody = {\r\n      embeds: [\r\n        {\r\n          title: `Github revoked for ${body.login}`,\r\n          description: `user authorization removed`,\r\n        },\r\n      ],\r\n    };\r\n\r\n    await pushDiscordWebhook(webhBody, res).then(() => res.status(200).end());\r\n  } else {\r\n    res.end();\r\n  }\r\n});\r\n\r\nexport default githubRouter;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport { Router } from 'hyper-express';\r\nimport pushDiscordWebhook from '../../helpers/pushDiscordWebhook';\r\n\r\nconst googleRouter = new Router();\r\n\r\ngoogleRouter.get('/', async (req, res) => {\r\n  res.redirect('https://github.com/login/oauth/authorize');\r\n});\r\nexport default googleRouter;\r\n","import { Router } from 'hyper-express';\r\nimport githubRouter from './github';\r\nimport googleRouter from './google';\r\n\r\nconst authRouter = new Router();\r\n\r\nauthRouter.post('/signin', async (req, res) => {\r\n  res.send('amogus');\r\n});\r\n\r\nauthRouter.post('/signup', async (req, res) => {\r\n  res.send('mogus');\r\n});\r\n\r\nauthRouter.use('/signin/github', githubRouter);\r\nauthRouter.use('/signin/google', googleRouter);\r\n\r\nexport default authRouter;\r\n","import authRouter from './auth';\r\nimport linkRouter from './link';\r\nimport linkGroupRouter from './linkgroup';\r\nimport tagRouter from './tag';\r\nimport userRouter from './user';\r\nimport userGroupRouter from './usergroup';\r\n\r\nexport {\r\n  authRouter,\r\n  linkRouter,\r\n  linkGroupRouter,\r\n  tagRouter,\r\n  userRouter,\r\n  userGroupRouter,\r\n};\r\n","import { Router } from 'hyper-express';\r\n\r\nconst linkRouter = new Router();\r\n\r\nexport default linkRouter;\r\n","import { Router } from 'hyper-express';\r\n\r\nconst linkGroupRouter = new Router();\r\n\r\nexport default linkGroupRouter;\r\n","import { Router } from 'hyper-express';\r\n\r\nconst tagRouter = new Router();\r\n\r\nexport default tagRouter;\r\n","import { Router } from 'hyper-express';\r\n\r\nconst userRouter = new Router();\r\n\r\nexport default userRouter;\r\n","import { Router } from 'hyper-express';\r\n\r\nconst userGroupRouter = new Router();\r\n\r\nexport default userGroupRouter;\r\n","module.exports = require(\"axios\");","module.exports = require(\"dotenv\");","module.exports = require(\"hyper-express\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Server } from 'hyper-express';\r\nimport 'dotenv';\r\nimport {\r\n  authRouter,\r\n  linkGroupRouter,\r\n  linkRouter,\r\n  tagRouter,\r\n  userGroupRouter,\r\n  userRouter,\r\n} from './app/routes';\r\nconst app = new Server();\r\n\r\n// Create GET route to serve 'Hello World'\r\napp.get('/hello', (request, response) => {\r\n  response.send('Hello World');\r\n});\r\n\r\nconst port = process.env.PORT || 80;\r\n\r\napp.use('/auth', authRouter);\r\napp.use('/users', userRouter);\r\napp.use('/usersgroup', userGroupRouter);\r\napp.use('/link', linkRouter);\r\napp.use('/linkgroup', linkGroupRouter);\r\napp.use('/tag', tagRouter);\r\n\r\napp\r\n  .listen(port as number)\r\n  .then(() => console.log('[START] LYNX API ONLINE: ' + port))\r\n  .catch((error) =>\r\n    console.log('[ERROR] FAILED TO START API: ' + port + ' Error ' + error)\r\n  );\r\n\r\n//Handle all of unsuported routes\r\napp.get('/*', (req, res) => {\r\n  res.status(404).send('Unsuported route');\r\n});\r\n"],"names":[],"sourceRoot":""}