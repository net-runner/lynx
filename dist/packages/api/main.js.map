{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,6DAAuC;AACvC,8BAAgB;AAChB,MAAM,SAAS,GAAG,IAAI,sBAAM,EAAE,CAAC;AAE/B,0CAA0C;AAC1C,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;IAC5C,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAEH,yDAAyD;AAEzD,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;AAEpC,SAAS;KACN,MAAM,CAAC,IAAc,CAAC;KACtB,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,IAAI,CAAC,CAAC;KACnE,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,IAAI,CAAC,CAAC,CAAC","sources":["webpack://linx/external commonjs \"dotenv\"","webpack://linx/external commonjs \"hyper-express\"","webpack://linx/webpack/bootstrap","webpack://linx/./packages/api/src/main.ts"],"sourcesContent":["module.exports = require(\"dotenv\");","module.exports = require(\"hyper-express\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Server } from 'hyper-express';\r\nimport 'dotenv';\r\nconst webserver = new Server();\r\n\r\n// Create GET route to serve 'Hello World'\r\nwebserver.get('/hello', (request, response) => {\r\n  response.send('Hello World');\r\n});\r\n\r\n// Activate webserver by calling .listen(port, callback);\r\n\r\nconst port = process.env.PORT || 80;\r\n\r\nwebserver\r\n  .listen(port as number)\r\n  .then((socket) => console.log('Webserver started on port: ' + port))\r\n  .catch((error) => console.log('Failed to start webserver on port: ' + port));\r\n"],"names":[],"sourceRoot":""}